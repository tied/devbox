#! /usr/bin/env bash
# @VERSION 1.0.0
# @AUTHOR Hasnae R.
# @LICENSE Apache-2.0

source selfedit.sh

DOCKER_IMAGES_HOME=${VIQUEEN_DEVBOX_HOME}/docker-images
DOCKER_HUB_NAMESPACE=viqueen

_image() {
    # shellcheck disable=SC2068
    _with_arguments 2 $@
    name=${1}
    version=${2}
    echo "${DOCKER_HUB_NAMESPACE}/${name}:${version}"
}

# @COMMAND build [name] [tag]       builds a docker image in viqueen namespace
function build() {
    # shellcheck disable=SC2068
    image=$(_image $@)
    name=${1}
    baseVersion=${2}
    target=${DOCKER_IMAGES_HOME}/${name}/
    if [[ -f "${target}/jdk.Dockerfile" ]]; then
        sed "s/\${JDK_VERSION}/${baseVersion}/g" "${target}"/jdk.Dockerfile > "${target}"/Dockerfile
    fi
    if [[ -f "${target}/ubuntu.Dockerfile" ]]; then
        sed "s/\${UBUNTU_VERSION}/${baseVersion}/g" "${target}"/ubuntu.Dockerfile > "${target}"/Dockerfile
    fi

    shift
    shift

    # shellcheck disable=SC2068
    docker build -t "${image}" "${target}"/ $@
}

# @COMMAND push [name] [tag]        pushes a docker image to viqueen namespace on docker hub
function push() {
    # shellcheck disable=SC2068
    image=$(_image $@)
    shift
    shift
    # shellcheck disable=SC2068
    docker push "${image}" $@
}

# @COMMAND run [name] [tag]         runs a docker image from viqueen namespace
function run() {
    _with_arguments 2 $@
    image=$(_image ${1} ${2})
    if [[ -n $3 ]]; then
      options="--name ${3}"
    fi
    docker run ${options} -it --entrypoint=/bin/bash "${image}"
}

# @COMMAND mount [name] [tag]
function mount() {
    _with_arguments 2 $@
    directory=$(pwd)
    volume_name=$(basename ${directory})
    image=$(_image ${1} ${2})
    options="--name ${volume_name} --volume ${directory}:/sources/${volume_name}"
    docker run ${options} \
        -it --entrypoint=/bin/bash \
        -w=/sources/${volume_name} \
        "${image}"
}

# @COMMAND start <container>           starts existing docker container
function start() {
  _with_arguments 1 $@
  container=${1}
  docker start -i ${container}
}

# @COMMAND delc                   deletes all containers
function delc() {
  docker ps -a | tail -n +2 | awk '{ print $1 }' | xargs docker rm
}

# @COMMAND deli                   deletes all images
function deli() {
  docker images | tail -n +2 | awk '{ print $3 }' | xargs docker rmi
}

# shellcheck disable=SC2068
eval $@

if [[ -z $1 ]]; then
    $0 -h
fi
